name: Convert Markdown into PDF
on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4


      - name: Convert Markdown into PDF
        uses: KoharaKazuya/marp-cli-action@v2
        with:
          config-file: ./.marprc-ci.yml


      - name: Save outputs
        uses: actions/upload-artifact@v4
        with:
          name: marp_output
          path: ./pub


      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./pub


      - name: Generate file URLs with CRLF
        id: generate_file_urls
        env:
          LINE_TOKEN: ${{ secrets.SECRET_LINE_NOTIFY_API_TOKEN }} # LINE NotifyのアクセストークンをGitHub Secretsから取得
        run: |
          # GitHub PagesのデプロイメントURLを環境変数から取得
          # PAGE_URL="${{ steps.deployment.outputs.page_url }}"


          REPOSITORY_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)

          PAGE_URL="https://${{github.repository_owner}}.github.io/${REPOSITORY_NAME}/"

          FILES=$(find ./pub -type f | sort | sed 's|./pub/||g' | while read file; do echo "${PAGE_URL}${file// /%20} "; done | tr '\n' '%'  | sed 's/%/%/g')
          FILES_WITH_URLS=$(echo " %　%◆以下のファイルがデプロイされました。%${{ github.event.head_commit.message }}%$FILES" | sed 's/%/\n/g')

          MESSAGE=$FILES_WITH_URLS
          curl -X POST https://notify-api.line.me/api/notify \
          -H "Authorization: Bearer $LINE_TOKEN" \
          -F "message=$MESSAGE"




  deploy:
    needs: publish
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
