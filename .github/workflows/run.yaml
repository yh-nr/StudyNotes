name: Convert Markdown into PDF
on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy images from pub/*/images to output2
        run: |
          while IFS= read -r folder; do
            base_folder=$(basename $(dirname "$folder"))
            mkdir -p "output2/$base_folder/images"
            cp -r "$folder"/* "output2/$base_folder/images/"
          done < <(find pub -type d -name images)

      - name: Convert Markdown into PDF
        uses: KoharaKazuya/marp-cli-action@v2
        with:
          config-file: ./.marprc-ci.yml


      - name: Save outputs
        uses: actions/upload-artifact@v4
        with:
          name: marp_output
          path: ./output2


      - name: Generate file URLs with CRLF
        id: generate_file_urls
        env:
          LINE_TOKEN: ${{ secrets.SECRET_LINE_NOTIFY_API_TOKEN }} # LINE NotifyのアクセストークンをGitHub Secretsから取得
        run: |
          REPOSITORY_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
          PAGE_URL="https://${{github.repository_owner}}.github.io/${REPOSITORY_NAME}/"
          COMMIT_DATE=$(git log -1 --format=%cd --date=format:"%m/%d(%a) %H:%M:%S")


          FILES=$(find ./output2 \( -name "*.html" -or -name "*.pdf" \) -type f | sort | sed 's|./output2/||g' | while read file; do echo "<div class='docs_link'><a href=\"${PAGE_URL}${file// /%20}\">${file// /%20}</a></div> "; done)
          FILES_WITH_URLS=$(echo "<div>Commit message: 「${{ github.event.head_commit.message }}」</div><div>Commit date:$COMMIT_DATE</div><h1>ファイル一覧</h1><div>$FILES</div>")

          # FILES_WITH_URLS変数の内容を一時ファイルに書き出す
          echo "$FILES_WITH_URLS" > temp_file_for_replacement.txt
          # Perlを使用して、[[REPLACE_ME]]を一時ファイルの内容で置き換える
          perl -i -pe 'BEGIN{local $/; open my $fh, "<", "temp_file_for_replacement.txt"; $replacement = join("", <$fh>); close $fh;} s#\[\[REPLACE_ME\]\]#$replacement#es' ./index.html
          cp ./index.html ./output2/index.html

          # 一時ファイルを削除
          rm temp_file_for_replacement.txt



          MESSAGE=$(echo -e " \n ◆以下のファイルがデプロイされました。\n Commit message: 「${{ github.event.head_commit.message }}」\n $COMMIT_DATE \n\n 下記URLからご確認下さい。 \n $PAGE_URL")
          curl -X POST https://notify-api.line.me/api/notify \
          -H "Authorization: Bearer $LINE_TOKEN" \
          -F "message=$MESSAGE"

      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./output2


  deploy:
    needs: publish
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
